# Make sure to check the documentation at https://goreleaser.com
project_name: vegas-credentials
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...
builds:
  - main: ./main.go
    # Custom ldflags templates.
    # Default is `-s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}} -X main.builtBy=goreleaser`.
    ldflags:
      - -s -w -X cmd.version={{.Version}}
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ incpatch .Version }}-next"
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
# .goreleaser.yml
brews:
  -
    # NOTE: make sure the url_template, the token and given repo (github or gitlab) owner and name are from the
    # same kind. We will probably unify this in the next major version like it is done with scoop.

    # GitHub/GitLab repository to push the formula to
    tap:
      owner: aripalo
      name: homebrew-tap
      # Optionally a branch can be provided. If the branch does not exist, it
      # will be created. If no branch is listed, the default branch will be used
      branch: main
      # Optionally a token can be provided, if it differs from the token provided to GoReleaser
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"

    # Template for the url which is determined by the given Token (github or gitlab)
    # Default for github is "https://github.com/<repo_owner>/<repo_name>/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    # Default for gitlab is "https://gitlab.com/<repo_owner>/<repo_name>/-/releases/{{ .Tag }}/downloads/{{ .ArtifactName }}"
    # Default for gitea is "https://gitea.com/<repo_owner>/<repo_name>/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    #url_template: "http://github.mycompany.com/foo/bar/releases/{{ .Tag }}/{{ .ArtifactName }}"

    # Allows you to set a custom download strategy. Note that you'll need
    # to implement the strategy and add it to your tap repository.
    # Example: https://docs.brew.sh/Formula-Cookbook#specifying-the-download-strategy-explicitly
    # Default is empty.
    #download_strategy: CurlDownloadStrategy

    # Allows you to add a custom require_relative at the top of the formula template
    # Default is empty
    #custom_require: custom_download_strategy

    # Git author used to commit to the repository.
    # Defaults are shown.
    commit_author:
      name: aripalo-releaser
      email: ari+github-releaser@aripalo.com

    # The project name and current git tag are used in the format string.
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"

    # Folder inside the repository to put the formula.
    # Default is the root folder.
    folder: Formula

    # Caveats for the user of your binary.
    # Default is empty.
    #caveats: "How to use this binary"

    # Your app's homepage.
    # Default is empty.
    #homepage: "https://example.com/"

    # Template of your app's description.
    # Default is empty.
    description: "A helper utility that plugs into standard credential_process to assume AWS IAM Role with – Yubikey Touch and Authenticator App – TOPT MFA to provide session credentials – with automatic refreshing."

    # SPDX identifier of your app's license.
    # Default is empty.
    license: "Apache-2.0"

    # Setting this will prevent goreleaser to actually try to commit the updated
    # formula - instead, the formula file will be stored on the dist folder only,
    # leaving the responsibility of publishing it to the user.
    # If set to auto, the release will not be uploaded to the homebrew tap
    # in case there is an indicator for prerelease in the tag e.g. v1.0.0-rc1
    # Default is false.
    #skip_upload: true

    # Custom block for brew.
    # Can be used to specify alternate downloads for devel or head releases.
    # Default is empty.
    #custom_block: |
    #  head "https://github.com/some/package.git"
    #  ...

    # Packages your package depends on.
    dependencies:
      - name: git
      #- name: zsh
      #  type: optional

    # Packages that conflict with your package.
    #conflicts:
    #  - svn
    #  - bash

    # Specify for packages that run as a service.
    # Default is empty.
    #plist: |
    #  <?xml version="1.0" encoding="UTF-8"?>
    #  ...

    # So you can `brew test` your formula.
    # Default is empty.
    #test: |
    #  system "#{bin}/program --version"
    #  ...

    # Custom install script for brew.
    # Default is 'bin.install "program"'.
    #install: |
    #  bin.install "program"
    #  ...

    # Custom post_install script for brew.
    # Could be used to do any additional work after the "install" script
    # Default is empty.
    #post_install: |
    #    etc.install "app-config.conf"
    #    ...

# .goreleaser.yml
scoop:
  # Template for the url which is determined by the given Token (github or gitlab)
  # Default for github is "https://github.com/<repo_owner>/<repo_name>/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
  # Default for gitlab is "https://gitlab.com/<repo_owner>/<repo_name>/-/releases/{{ .Tag }}/downloads/{{ .ArtifactName }}"
  # Default for gitea is "https://gitea.com/<repo_owner>/<repo_name>/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
  #url_template: "http://github.mycompany.com/foo/bar/releases/{{ .Tag }}/{{ .ArtifactName }}"

  # Repository to push the app manifest to.
  bucket:
    owner: aripalo
    name: scoops
    # Optionally a branch can be provided. If the branch does not exist, it
    # will be created. If no branch is listed, the default branch will be used
    branch: main
    # Optionally a token can be provided, if it differs from the token provided to GoReleaser
    token: "{{ .Env.SCOOP_BUCKET_GITHUB_TOKEN }}"

  # Folder inside the repository to put the scoop.
  # Default is the root folder.
  folder: Scoops

  # Git author used to commit to the repository.
  # Defaults are shown.
  commit_author:
      name: aripalo-releaser
      email: ari+github-releaser@aripalo.com

  # The project name and current git tag are used in the format string.
  commit_msg_template: "Scoop update for {{ .ProjectName }} version {{ .Tag }}"

  # Your app's homepage.
  # Default is empty.
  homepage: "https://github.com/aripalo/vegas-credentials"

  # Your app's description.
  # Default is empty.
  description: "A helper utility that plugs into standard credential_process to assume AWS IAM Role with – Yubikey Touch and Authenticator App – TOPT MFA to provide session credentials – with automatic refreshing."

  # Your app's license
  # Default is empty.
  license: "Apache-2.0"

  # Setting this will prevent goreleaser to actually try to commit the updated
  # manifest leaving the responsibility of publishing it to the user.
  # If set to auto, the release will not be uploaded to the scoop bucket
  # in case there is an indicator for prerelease in the tag e.g. v1.0.0-rc1
  # Default is false.
  #skip_upload: true #TODO

  # Persist data between application updates
  #persist:
  #- "data"
  #- "config.toml"

  # An array of commands to be executed before an application is installed.
  # Default is empty.
  #pre_install: ["Write-Host 'Running preinstall command'"]

  # An array of commands to be executed after an application is installed.
  # Default is empty.
  #post_install: ["Write-Host 'Running postinstall command'"]

publishers:
  - name: npm-publisher
    cmd: ./utils/set-npm-version.sh {{ .Version }}
